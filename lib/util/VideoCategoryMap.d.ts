type VideoCategoryMapping = {
    1: "Film & Animation";
    2: "Autos & Vehicles";
    10: "Music";
    15: "Pets & Animals";
    17: "Sports";
    18: "Short Movies";
    19: "Travel & Events";
    20: "Gaming";
    21: "Videoblogging";
    22: "People & Blogs";
    23: "Comedy";
    24: "Entertainment";
    25: "News & Politics";
    26: "Howto & Style";
    27: "Education";
    28: "Science & Technology";
    29: "Nonprofits & Activism";
    30: "Movies";
    31: "Anime/Animation";
    32: "Action/Adventure";
    33: "Classics";
    35: "Documentary";
    36: "Drama";
    37: "Family";
    38: "Foreign";
    39: "Horror";
    40: "Sci-Fi/Fantasy";
    41: "Thriller";
    42: "Shorts";
    43: "Shows";
    44: "Trailers";
};
export type VideoCategoryId = keyof VideoCategoryMapping & number;
export type VideoCategory = VideoCategoryMapping[keyof VideoCategoryMapping];
declare class VideoCategoryMap {
    private categoryIdtoCategoryMap;
    private categorytoCategoryIdMap;
    constructor(categoryIdtoCategoryMap: VideoCategoryMapping);
    categoryIdtoCategory(id: number): VideoCategory | undefined;
    categorytoCategoryId(category: string): VideoCategoryId | undefined;
}
export declare const videoCategoryMap: VideoCategoryMap;
export {};
